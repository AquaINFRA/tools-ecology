install.packages(c("askpass", "bslib", "classInt", "covr", "cpp11", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmatch", "fontawesome", "fs", "gargle", "gert", "ggplot2", "ggrepel", "gtable", "haven", "Hmisc", "htmltools", "httr", "igraph", "jqr", "knitr", "labeling", "lme4", "lubridate", "markdown", "MatrixModels", "minpack.lm", "minqa", "mvtnorm", "openssl", "osqp", "pkgload", "plyr", "prettyunits", "processx", "promises", "purrr", "quantreg", "ragg", "raster", "rbibutils", "Rcpp", "RcppArmadillo", "Rdpack", "readxl", "rematch", "remotes", "rgl", "rmarkdown", "Rmpfr", "rstudioapi", "sass", "shiny", "sp", "survival", "systemfonts", "terra", "testthat", "textshaping", "tinytex", "usethis", "utf8", "uuid", "V8", "vctrs", "viridis", "vroom", "withr", "wk", "xfun", "xml2"))
setwd("~/Desktop/Pauline_VA/bois_mort/NEW")
# Assurez-vous d'installer et de charger les packages nécessaires
library(ggplot2)
library(sf)
library(dplyr)
library(RColorBrewer)
library(ggspatial)
# Charger les données spatiales à partir du shapefile
donnees_spatiales <- st_read("ser_l93.shp")
View(donnees_spatiales)
for (i in seq_along(donnees_spatiales$codeser)) {
premiere_lettre <- substr(donnees_spatiales$codeser[i], 1, 1)
donnees_spatiales$codeser[i] <- premiere_lettre
}
View(donnees_spatiales)
donnees_agg <- donnees_spatiales %>%
group_by(codeser) %>%
summarise()
View(donnees_agg)
donnees_agg = donnees_agg[-1,]
View(donnees_agg)
st_write(donnees_agg,"GRECO_l93.shp")
donnees_2008_2012 = read.csv("test-data/regres2008_2012_scaled.csv")
donnees_2013_2017 = read.csv("test-data/regres2013_2017_scaled.csv")
taux_evol1 = data.frame(round(donnees_2008_2012[1,2:12]*100))
taux_evol2 = data.frame(round(donnees_2013_2017[1,2:12]*100))
taux_evol_percent = taux_evol2-taux_evol1
taux_evol_percent = t(taux_evol_percent)
colnames(taux_evol_percent)<- "percent"
View(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution rate (%)"
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t")
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",row.names = F,col.names = T)
View(taux_evol1)
View(donnees_2008_2012)
write.csv(taux_evol_percent,"evolution_rate.tsv",sep="\t",row.names = F,col.names = T)
write.csv(taux_evol_percent,"evolution_rate.tsv",sep="\t")
write.tabble(taux_evol_percent,"evolution_rate.tsv",sep="\t")
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t")
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
View(taux_evol_percent)
class(taux_evol_percent)
taux_evol_percent = as.data.frame(taux_evol_percent)
class(taux_evol_percent)
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
View(taux_evol_percent)
# Charger les données spatiales à partir du shapefile
donnees_spatiales <- st_read("ser_l93.shp")
donnees_2008_2012 = read.csv("test-data/regres2008_2012_scaled.csv")
donnees_2013_2017 = read.csv("test-data/regres2013_2017_scaled.csv")
taux_evol1 = data.frame(round(donnees_2008_2012[1,2:12]*100))
taux_evol2 = data.frame(round(donnees_2013_2017[1,2:12]*100))
taux_evol_percent = taux_evol2-taux_evol1
taux_evol_percent = t(taux_evol_percent)
colnames(taux_evol_percent)<- c("\t","Evolution rate (%)")
View(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution rate (%)"
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
View(taux_evol1)
View(taux_evol2)
View(taux_evol_percent)
donnee_fin = bind_cols(donnees_agg,taux_evol_percent)
donnees_agg = st_read("GRECO_l93.shp")
donnee_fin = bind_cols(donnees_agg,taux_evol_percent)
View(donnee_fin)
View(donnee_fin)
taux_evol_percent = t(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution_rate_(%)"
donnees_2008_2012 = read.csv("test-data/regres2008_2012_scaled.csv")
donnees_2013_2017 = read.csv("test-data/regres2013_2017_scaled.csv")
taux_evol1 = data.frame(round(donnees_2008_2012[1,2:12]*100))
taux_evol2 = data.frame(round(donnees_2013_2017[1,2:12]*100))
taux_evol_percent = taux_evol2-taux_evol1
taux_evol_percent = t(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution_rate_(%)"
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
donnee_fin = bind_cols(donnees_agg,taux_evol_percent)
View(donnee_fin)
intervales <- cut(donnee_fin$`Evolution_rate_(%)`, breaks = c(-Inf, 0, 9, 20, Inf), labels = c("Moins de 0", "0 à 10", "10 à 20", "Plus de 20"))
ggplot(donnee_fin) +
geom_sf(aes(fill = intervales)) +
scale_fill_manual(values = c('#D9F0D3',"#A6DBA0","#5AAE61","#1B7837")) +
labs(title = "Taux d'évolution du volume des bois favorable à la biodiversité par GRECO", fill = "Taux d'évolution \n(%) entre les périodes \n2008-2012 et 2013-2017") +
annotation_scale()
donnees_2008_2012 = read.csv("test-data/regres2008_2012_scaled.csv")
donnees_2013_2017 = read.csv("test-data/regres2013_2017_scaled.csv")
taux_evol1 = data.frame(round(donnees_2008_2012[1,2:12]*100))
taux_evol2 = data.frame(round(donnees_2013_2017[1,2:12]*100))
taux_evol_percent <- data.frame("Evolution rate (%)" = taux_evol2 - taux_evol1)
View(taux_evol_percent)
taux_evol_percent = t(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution_rate_(%)"
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
taux_evol_percent = taux_evol2-taux_evol1
taux_evol_percent = t(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution_rate_(%)"
taux_evol1 = data.frame(round(donnees_2008_2012[1,2:12]*100))
taux_evol2 = data.frame(round(donnees_2013_2017[1,2:12]*100))
taux_evol_percent <- data.frame("Region" = rownames(taux_evol2), "Evolution rate (%)" = taux_evol2 - taux_evol1)
View(taux_evol_percent)
taux_evol_percent = t(taux_evol_percent)
View(taux_evol_percent)
taux_evol1 = data.frame(round(donnees_2008_2012[1,2:12]*100))
taux_evol2 = data.frame(round(donnees_2013_2017[1,2:12]*100))
taux_evol_percent = taux_evol2-taux_evol1
View(taux_evol_percent)
taux_evol_percent = data.frame(taux_evol2-taux_evol1,colnames=F)
View(taux_evol_percent)
View(taux_evol_percent)
taux_evol_percent = taux_evol2-taux_evol1
View(taux_evol_percent)
taux_evol_percent = t(taux_evol_percent)
View(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution_rate_(%)"
taux_evol_percent = taux_evol2-taux_evol1
View(taux_evol_percent)
taux_evol_percent = as.data.frame(t(taux_evol_percent))
View(taux_evol_percent)
colnames(taux_evol_percent)<- "Evolution_rate_(%)"
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
write.table(taux_evol_percent,"evolution_rate.tsv",quote = F)
write.table(taux_evol_percent,"evolution_rate.tsv",sep="\t",quote = F)
donnee_fin = bind_cols(donnees_agg,taux_evol_percent)
View(donnee_fin)
intervales <- cut(donnee_fin$`Evolution_rate_(%)`, breaks = c(-Inf, 0, 9, 20, Inf), labels = c("Moins de 0", "0 à 10", "10 à 20", "Plus de 20"))
ggplot(donnee_fin) +
geom_sf(aes(fill = intervales)) +
scale_fill_manual(values = c('#D9F0D3',"#A6DBA0","#5AAE61","#1B7837")) +
labs(title = "Taux d'évolution du volume des bois favorable à la biodiversité par GRECO", fill = "Taux d'évolution \n(%) entre les périodes \n2008-2012 et 2013-2017") +
annotation_scale()
ggsave("map.pdf", device = "pdf")
st_drivers()
View(taux_evol_percent)
test = read.tabble("evolution_rate.tsv")
setwd("~/Desktop/Pauline_VA/bois_mort/NEW")
test = read.table("evolution_rate.tsv")
View(test)
donnee_fin = bind_cols(donnees_agg,taux_evol_percent)
View(donnee_fin)
intervales <- cut(donnee_fin$`Evolution_rate_(%)`, breaks = c(-Inf, 0, 9, 20, Inf), labels = c("Moins de 0", "0 à 10", "10 à 20", "Plus de 20"))
